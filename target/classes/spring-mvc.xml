<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	default-autowire="byName">

	<context:component-scan base-package="com.win.xymz" />

	<context:annotation-config />
	<mvc:annotation-driven />

	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<bean id="velocityConfig"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath" value="" />
		<property name="configLocation">
			<value>classpath:velocity.properties</value>
		</property>
	</bean>
	
	<bean id="velocityviewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="cache" value="true" />
		<property name="exposePathVariables" value="false" />
		<property name="prefix" value="WEB-INF/templates/" />
		<property name="suffix" value=".vm" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="viewClass">
			<value>
				org.springframework.web.servlet.view.velocity.VelocityView
			</value>
		</property>
	</bean>


	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager" ref="contentNegotiationManager" />
		<property name="viewResolvers">
			<!-- 关闭所有的解析器，防止它在查找候选视图时多个解析器都运行 -->
			<list>
				<ref bean="velocityviewResolver" />
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
					<property name="objectMapper">
						<bean class="com.fasterxml.jackson.databind.ObjectMapper">
							<property name="serializationInclusion">
								<value>NON_NULL</value>
							</property>
						</bean>
					</property>
					<property name="extractValueFromSingleKeyModel" value="true" />
					<property name="prettyPrint" value="false" />
					<property name="contentType" value="application/json" />
					<property name="encoding" value="UTF8" />
				</bean>
			</list>
		</property>
	</bean>



	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="ignoreAcceptHeader" value="true" />
		<property name="favorPathExtension" value="true" />
		<property name="defaultContentType" value="application/json" />
		<property name="favorParameter" value="true" />
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="html" value="text/html" />
				<entry key="do" value="text/html" />
			</map>
		</property>
	</bean>

	<!-- Content-Type类型为text/plain的转换器 -->
	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter" />

	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="messageConverters"> <list> <ref bean="stringHttpMessageConverter"/> 
		<ref bean="mappingJacksonHttpMessageConverter" /> </list> </property> </bean> -->
</beans>
